# -*- coding: utf-8 -*-
"""AI Assignment3 M20AIE298.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17b0E_1Z1FgC3TCBBOAEcSTCXzzKksuXC
"""

format_string = "{:.4f}"
def take_input():
    n = int(input())
    listt = []
    for i in range(2, n+2):
        listt.append(list(map(str,input().strip().split(',')))[:2])
  
    listt2 = []
    for i in range(n+2, 2*n+2):
        listt2.append(list(map(str,input().strip().split(' '))))
  
    m = int(input())
    
    listt_x = []
    dict0 = {"N"+str(i):[] for i in range(n)}
    for i in range(2*n+3, 2*n+2+m+1):
        listt_x = input().split(',')
        for j in range(len(listt_x)):
            col = "N"+str(j)
            dict0[col].append(listt_x[j])

    return n, listt, listt2, m, dict0



def chk_cond_dependency(n, listt2):
    dict1 = {'N'+str(i):[] for i in range(n)}
    for i in range(n):
        for j in range(n): 
            if listt2[i][j] == '1':
                dict1["N"+str(j)].append("N"+str(i))
    return dict1

def get_bayesian(sample, listt5):
    listt7 = []
    for i in sample:
        for j in listt5:
            listt7.append(i+j)
    
    if len(listt7)>0:
        return listt7
    else:
        return sample

def prnt_prob(pattern, dict2, dict3):
    #print(pattern)
    listt3 = []
    listt4 = []
    for j in pattern:
        if (j.split('|')[-1] == 'no' or j.split('|')[-1] == 'FALSE') and j in dict3:
            listt3.append(dict3[j]/dict2[j.split('|')[0]])
        elif j in dict3:
            listt4.append(dict3[j]/dict2[j.split('|')[0]])
            
    print(' '.join(str(format_string.format(cell)) for cell in listt4+listt3))
    
def match_pattern(sample, k):
    listt5 = []
    listt6 = []
    while (k>0):
        listt5 = get_bayesian(sample, listt5)
        k = k - 1
    if len(listt5)>0:
        for i in listt5:
            for j in sample:
                listt6.append(i+'|'+j)
    else:
        for j in sample:
            listt6.append('|'+j)
     
    return listt6

def calc_prob(dict1, dict0, m):
    for key, value in dict1.items():
        dict2 = {}
        dict3 = {}
        for i in range(m):
            element=''
            for item in value:
                element+=dict0[item][i]
            if element not in dict2:
                dict2[element]=1
            else:
                dict2[element]+=1
            element +='|'+dict0[key][i]
        
            if element not in dict3:
                dict3[element]=1
            else:
                dict3[element]+=1
        if listt[0][0] == 'yes' or listt[0][0] == 'no':
            sample = ['yes', 'no']
        elif listt[0][0] == 'TRUE' or listt[0][0] == 'FALSE':
            sample = ['TRUE', 'FALSE']
        else:
            sample = ['1', '0']
    
        pattern = match_pattern(sample, len(value))
        prnt_prob(pattern, dict2, dict3)
       

if __name__ == '__main__':
    n, listt, listt2, m, dict0 = take_input()
    dict1 = chk_cond_dependency(n, listt2)
    calc_prob(dict1, dict0, m)